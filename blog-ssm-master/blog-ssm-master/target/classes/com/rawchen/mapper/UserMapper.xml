<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rawchen.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.rawchen.domain.User">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="screenName" jdbcType="VARCHAR" property="screenname" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="activated" jdbcType="TIMESTAMP" property="activated" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, name, password, mail, url, screenName, created, activated, role, photo
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>

  <select id="selectAllUser" resultMap="BaseResultMap">
    select * from user order by created desc
  </select>

  <select id="selectUserByNameAndPassword" parameterType="user" resultMap="BaseResultMap">
    select * from user where name = #{name,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>

  <select id="findUserByUserName" parameterType="string" resultMap="BaseResultMap">
    select * from user where name = #{name,jdbcType=VARCHAR};
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rawchen.domain.User">
    insert into user (uid, name, password, 
      mail, url, screenName, 
      created, activated, role, 
      photo)
    values (#{uid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{mail,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{screenname,jdbcType=VARCHAR}, 
      #{created,jdbcType=TIMESTAMP}, #{activated,jdbcType=TIMESTAMP}, #{role,jdbcType=VARCHAR},
      #{photo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.rawchen.domain.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="screenname != null">
        screenName,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="activated != null">
        activated,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="photo != null">
        photo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="screenname != null">
        #{screenname,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="activated != null">
        #{activated,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rawchen.domain.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="screenname != null">
        screenName = #{screenname,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="activated != null">
        activated = #{activated,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rawchen.domain.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      screenName = #{screenname,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      activated = #{activated,jdbcType=TIMESTAMP},
      role = #{role,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>

  <update id="updateScreenNameAndMailAndUrl" parameterType="com.rawchen.domain.User">
    update user
    set mail = #{mail,jdbcType=VARCHAR},
        photo = #{photo,jdbcType=VARCHAR},
        url = #{url,jdbcType=VARCHAR},
        screenName = #{screenname,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>

  <update id="updatePassword">
    update user
    set password = #{password,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>